#!/bin/bash
#
set -o nounset
set -o errexit

# Load the prerequisite environment variables
TASK_FILE="${BASH_SOURCE[0]}"
if [[ "$TASK_FILE" != /* ]]; then TASK_FILE="`pwd`/$TASK_FILE"; fi
MYDIR=$( cd "$( dirname "$TASK_FILE" )" && pwd )
ROOTDIR="$MYDIR/../"
source "$ROOTDIR/env/util.env"
#source "$ROOTDIR/env/prereq_bash.env"
source "$ROOTDIR/env/database_remote.env"
MYDIR=$( cd "$( dirname "$TASK_FILE" )" && pwd )  # MYDIR gets clobbered

set -o xtrace

function extract_pattern() {
  pattern=$1;
  outfile=$2;

  pgsql "COPY (
    SELECT id, doc_id, sentence_index, gloss, words, lemmas, pos_tags, ner_tags, doc_char_begin, doc_char_end, dependencies_conll
      FROM sentence WHERE gloss ~* E'$pattern' LIMIT 10000
      ) TO STDOUT DELIMITER E'\t';" |\
  sed 's#\\n# #g' > $outfile;
}

# length: (milli|centi||kilo|)(metre|meter)
# (mile)|(yard)|(foot)|(feet)|(inch)

# area measures: square X, sq x.
# volume measures: cubic | gallons | litres 

# time measures: SI second, minute, hour, day, week, month, year, 
# weight: gram, kilogram, ...

# money
#extract_pattern '\\$[0-9]+(,[0-9]+)?(\\.[0-9]+)?[[:>:]]' examples/money.tsv
NUMBER='([0-9]+(,[0-9]+)?(\\.[0-9]+)?)'
MULTIPLIER='(hundred)|(thousand)|(million)|(billion)|(trillion)'
MONEY='(USD)|(US\$)|(\$)'
MONEY_AFTER='dollars'
TIME='((millisecond)|(second)|(minute)|(hour)|(day)|(week)|(day)|(year))s?'
WEIGHT='((gram)|(kilogram)|(ounce)|(pound)|(ton)|(gm)|(kg)|(oz)|(lb)).?s?'
LENGTH='(((millimeter)|(centimeter)|(meter)|(kilometer)|(inch)|(inche)|(foot)|(feet)|(yard)|(mile))s?)|((mm)|(cm)|(m)|(km)|(in)|(ft)|(yd)|(mi)).?s?'
AREAMOD='(square)|(sq.?)'
AREAEXT='(hectacre)|(acre)|(ha.)|(ac.)'
VOLUMEMOD='(cubic)|(cu.?)'
VOLUMEEXT='(gallon)|(ga.?)|(liter)|(li.?)|(barrel)|(quart)|(qt.?)'
PEOPLE='(people)|(person)'
CAR='cars?'
GUN='guns?'
DOG='dogs?'

## time measures: millisecond, second, minute, hour, day, week, year
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?$TIME[[:>:]]" examples/time.tsv
#
## weight measures: grams, pounds, ton, kilograms 
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?$WEIGHT[[:>:]]" examples/weight.tsv
#
## length measures: miles, kilometers, kilometre, metre, meters,
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?$LENGTH[[:>:]]" examples/length.tsv
#
## area measures: square centimeters, square inch, square foot, square mile
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?(($AREAMOD $LENGTH)|($AREAEXT))[[:>:]]" examples/area.tsv
#
## volume measures: gallons, liters
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?(($VOLUMEMOD $LENGTH)|($VOLUMEEXT))[[:>:]]" examples/volume.tsv

# money
extract_pattern "($MONEY) [[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?($MONEY_AFTER)?[[:>:]]" examples/money.tsv

# entity measures cars, dogs, guns, people, tweets
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?($PEOPLE)[[:>:]]" examples/people.tsv
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?($CAR)[[:>:]]" examples/car.tsv
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?($GUN)[[:>:]]" examples/gun.tsv
#extract_pattern "[[:<:]]$NUMBER[[:>:]] ?($MULTIPLIER)* ?($DOG)[[:>:]]" examples/dog.tsv

# Done
wait  # Very important: wait for the jobs to actually finish...
set -o errexit
msg "DONE loading data"
msg "DONE with `basename $0`"

