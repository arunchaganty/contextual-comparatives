#!/bin/bash
#

if [ -z ${__PREREQ_BASH_ENV+x} ]; then # Header guard

MYDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source "$MYDIR/util.env"
MYDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

#
# Check for required shell scripts
#
# These are just braindead to have (I hope)
ensureCmd dirname
ensureCmd basename
ensureCmd cp
ensureCmd cat
ensureCmd awk
ensureCmd sed
ensureCmd grep
ensureCmd egrep
ensureCmd wget
ensureCmd whoami
ensureCmd finger
ensureCmd time
ensureCmd sleep
ensureCmd mktemp
ensureCmd scp
ensureCmd gzip
ensureCmd gunzip
ensureCmd zcat
ensureCmd date
ensureCmd wait
ensureCmd stat
ensureCmd flock  # locking -- we need this for locking gpfdist
# These may actually be missing
# (parallel)
ensureCmd parallel "(GNU Parallel; http://www.gnu.org/software/parallel/ or /u/nlp/packages/prefix/bin/parallel)"
GNUPARALLEL_MINVERSION="20130722"
if ! parallel --minversion $GNUPARALLEL_MINVERSION > /dev/null ; then
  err "Your version of GNU Parallel is too old (`parallel --minversion $GNUPARALLEL_MINVERSION`; required > $GNUPARALLEL_MINVERSION)!"
  err "See http://ftp.gnu.org/gnu/parallel/"
  exit 1
fi
# (git)
ensureCmd git     # for versioning results
ensureCmd md5sum  # for versioning results
#ensureCmd pigz '(Parallel GZip; /u/nlp/packages/prefix/bin/pigz)'

# Header guard
__PREREQ_BASH_ENV="sourced"
fi
