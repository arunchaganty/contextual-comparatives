#!/bin/bash
#

if [ -z ${__PREREQ_JAVA_ENV+x} ]; then # Header guard

MYDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source "$MYDIR/util.env"

#
# Check for Java
#
ensureCmd java "(Java 8; /u/nlp/packages/java/jdk1.8-current-x86_64/bin/java)"
# Check the java version
java -version 2>&1 | grep 'java version "1\.8\.' > /dev/null || {
  java -version
  err "Java must be Java 8 (or higher)"
  exit 1
}

#
# Various library dependencies
#
export LIBS=""
function ensureLib() {
  # (add the library to the classpath
  export LIBS="$LIBS:$MYDIR/../lib/$1"
  # (check if the library already exists)
  if [ -e "$MYDIR/../lib/$1" ]; then
    return 0
  fi
  # (check if it exists in JavaNLP)
  if [ ! -z ${JAVANLP_HOME+x} ]; then
    if [ -e "$JAVANLP_HOME/projects/core/lib/$1" ]; then
      cp "$JAVANLP_HOME/projects/core/lib/$1" "$MYDIR/../lib/"
      return 0
    elif [ -e "$JAVANLP_HOME/projects/more/lib/$1" ]; then
      cp "$JAVANLP_HOME/projects/more/lib/$1" "$MYDIR/../lib/"
      return 0
    elif [ -e "$JAVANLP_HOME/projects/research/lib/$1" ]; then
      cp "$JAVANLP_HOME/projects/research/lib/$1" "$MYDIR/../lib/"
      return 0
    fi
  fi
  # (get the library)
  wget -O "$MYDIR/../lib/$1" "$2"
}

# Library dependencies for java files
# Note that the versions are chosen to align with CoreNLP where possible.
ensureLib 'joda-time-2.1.jar' 'http://search.maven.org/remotecontent?filepath=joda-time/joda-time/2.1/joda-time-2.1.jar'
ensureLib 'jollyday-0.4.7.jar' 'http://search.maven.org/remotecontent?filepath=de/jollyday/jollyday/0.4.7/jollyday-0.4.7.jar'
ensureLib 'commons-lang-3-3.1.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/commons/commons-lang3/3.3.1/commons-lang3-3.3.1.jar'
ensureLib 'commons-logging-1.1.1.jar' 'http://central.maven.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar'
ensureLib 'log4j-1.2.16.jar' 'http://search.maven.org/remotecontent?filepath=log4j/log4j/1.2.16/log4j-1.2.16.jar'
ensureLib 'libthrift-0.8.0.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/thrift/libthrift/0.8.0/libthrift-0.8.0.jar'
ensureLib 'google-guava-15.0.jar' 'http://search.maven.org/remotecontent?filepath=com/google/guava/guava/15.0/guava-15.0.jar'
ensureLib 'protobuf-2.4.1.jar' 'http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.4.1/protobuf-java-2.4.1.jar'
ensureLib 'lucene-core-4.10.3.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/lucene/lucene-core/4.10.3/lucene-core-4.10.3.jar'
ensureLib 'lucene-analyzers-common-4.10.3.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/lucene/lucene-analyzers-common/4.10.3/lucene-analyzers-common-4.10.3.jar'
ensureLib 'lucene-queries-4.10.3.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/lucene/lucene-queries/4.10.3/lucene-queries-4.10.3.jar'
ensureLib 'lucene-queryparser-4.10.3.jar' 'http://search.maven.org/remotecontent?filepath=org/apache/lucene/lucene-queryparser/4.10.3/lucene-queryparser-4.10.3.jar'
ensureLib 'slf4j-api-1.6.4.jar' 'http://search.maven.org/remotecontent?filepath=org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar'
ensureLib 'slf4j-simple-1.7.2.jar' 'http://search.maven.org/remotecontent?filepath=org/slf4j/slf4j-simple/1.7.2/slf4j-simple-1.7.2.jar'
ensureLib 'opencsv-2.4.jar' 'http://search.maven.org/remotecontent?filepath=au/com/bytecode/opencsv/2.4/opencsv-2.4.jar'
ensureLib 'qry-1.0.1.jar' 'https://github.com/gangeli/qry/releases/download/1.0.1/qry.jar'
ensureLib 'trove-3.0.1.jar' 'http://central.maven.org/maven2/net/sf/trove4j/trove4j/3.0.1/trove4j-3.0.1.jar'
ensureLib 'postgresql-9.2-1003.jar' 'http://search.maven.org/remotecontent?filepath=org/postgresql/postgresql/9.2-1003-jdbc4/postgresql-9.2-1003-jdbc4.jar'
ensureLib 'kryo-2.21.jar' 'http://search.maven.org/remotecontent?filepath=com/esotericsoftware/kryo/kryo/2.21/kryo-2.21.jar'
ensureLib 'gson-2.3.1.jar' 'http://search.maven.org/remotecontent?filepath=com/google/code/gson/gson/2.3.1/gson-2.3.1.jar'
ensureLib 'jaws-1.3.0.jar' 'http://lyle.smu.edu/~tspell/jaws/jaws-bin.jar'
ensureLib 'maltparser-1.8.1.jar' 'http://nlp.stanford.edu/projects/kbp/maltparser-1.8.1.jar'
ensureLib 'liblinear-1.8.jar' 'http://nlp.stanford.edu/projects/kbp/liblinear-1.8.jar'
#ensureLib 'fastutil-7.0.6.jar' 'http://search.maven.org/remotecontent?filepath=it/unimi/dsi/fastutil/7.0.6/fastutil-7.0.6.jar'
ensureLib 'fastutil.jar' 'http://nlp.stanford.edu/projects/kbp/fastutil.jar'
# (these should be put onto Maven at some point)
ensureLib 'naturalli-preprocess-2015-02-15.jar' 'https://www.dropbox.com/s/yp4fdaoa3ryjtmx/naturalli_preprocess.jar?dl=1'
#ensureLib 'naturalli-models-2015-04-30.jar' 'http://nlp.stanford.edu/projects/naturalli/openie-models.2015-04-30.jar'
ensureLib 'naturalli-models-2015-02-26.jar' 'https://www.dropbox.com/s/1m53l4fpjypaj0f/naturalli_models.jar?dl=0'
ensureLib 'naturalli-models.jar' 'http://nlp.stanford.edu/projects/naturalli/openie-models-current.jar'
ensureLib 'coref-models.jar' 'http://nlp.stanford.edu/projects/kbp/coref-models.jar'
ensureLib 'stanford-corenlp-caseless-2015-04-20-models.jar' 'http://nlp.stanford.edu/downloads/stanford-corenlp-caseless-2015-04-20-models.jar'
#ensureLib 'ollie.jar' 'http://knowitall.cs.washington.edu/ollie/ollie-app-latest.jar'  # CONFLICTS WITH CORENLP!

# Header guard
__PREREQ_JAVA_ENV="sourced"
fi
